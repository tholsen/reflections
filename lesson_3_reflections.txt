When would you want to use a remote repository rather than keeping
all your work local?

    When you are working on a project that involves a number of people
    working at different sites. Another reason might be working on your
    own project at different sites.

Why might you want to always pull changes manually rather than having
Git automatically stay up-to-date with your remote repository?

    So that you don't get changes from others that could interfere with your
    work.

Describe the differences between forks, clones, and branches. When would
you use one instead of another?

    A fork is simply a clone of another persons repository into your github
    account whereas a clone is a copy of your github repository on your local
    machine. A branch is a separate set of files used to test changes or new
    features in your code.

What is the benefit of having a copy of the last known state of the
remote stored locally?

    The benefit of having a copy of the last known state of the remote stored
    locally is that you can quickly see differences between the your
    modifications and the remote modifications with the last know state of
    the remote repository.

How would you collaborate without using Git or GitHub? What would be easier,
and what would be harder?

    Without using a version control system like Git or GitHub, one would have
    to rely on email between collaborators to modify files. One person would
    have to keep all the files on his computer and the other person would have
    to send changes to that person. This would make life for the programmers
    extremely difficult.

When would you want to make changes in a separate branch rather than directly
in master? What benefits does each approach have?

    When the project is owned by another person, you should create a branch so
    that the project manager can review the modifications and, if approved, the
    project manager can merge the changes into the master branch.
